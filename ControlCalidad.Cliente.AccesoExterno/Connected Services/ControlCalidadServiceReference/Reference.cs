//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineaDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class LineaDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorLineaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((this.NumeroField.Equals(value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorLinea {
            get {
                return this.SupervisorLineaField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorLineaField, value) != true)) {
                    this.SupervisorLineaField = value;
                    this.RaisePropertyChanged("SupervisorLinea");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpleadoDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class EmpleadoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoElectronicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido {
            get {
                return this.ApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoField, value) != true)) {
                    this.ApellidoField = value;
                    this.RaisePropertyChanged("Apellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoElectronico {
            get {
                return this.CorreoElectronicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoElectronicoField, value) != true)) {
                    this.CorreoElectronicoField = value;
                    this.RaisePropertyChanged("CorreoElectronico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Documento {
            get {
                return this.DocumentoField;
            }
            set {
                if ((this.DocumentoField.Equals(value) != true)) {
                    this.DocumentoField = value;
                    this.RaisePropertyChanged("Documento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsuarioDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UsuarioDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TipoUsuarioDto TipoDeUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto UsuarioDeEmpleadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TipoUsuarioDto TipoDeUsuario {
            get {
                return this.TipoDeUsuarioField;
            }
            set {
                if ((this.TipoDeUsuarioField.Equals(value) != true)) {
                    this.TipoDeUsuarioField = value;
                    this.RaisePropertyChanged("TipoDeUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto UsuarioDeEmpleado {
            get {
                return this.UsuarioDeEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioDeEmpleadoField, value) != true)) {
                    this.UsuarioDeEmpleadoField = value;
                    this.RaisePropertyChanged("UsuarioDeEmpleado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoUsuarioDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    public enum TipoUsuarioDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrador = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorLinea = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorCalidad = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColorDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ColorDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModeloDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ModeloDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenominacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjetivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Denominacion {
            get {
                return this.DenominacionField;
            }
            set {
                if ((object.ReferenceEquals(this.DenominacionField, value) != true)) {
                    this.DenominacionField = value;
                    this.RaisePropertyChanged("Denominacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Objetivo {
            get {
                return this.ObjetivoField;
            }
            set {
                if ((this.ObjetivoField.Equals(value) != true)) {
                    this.ObjetivoField = value;
                    this.RaisePropertyChanged("Objetivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sku {
            get {
                return this.SkuField;
            }
            set {
                if ((this.SkuField.Equals(value) != true)) {
                    this.SkuField = value;
                    this.RaisePropertyChanged("Sku");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdenProduccionDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class OrdenProduccionDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto ColorCalzadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto EstadoDeOPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto LineaTrabajoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.HorarioDto[] ListaDeHorarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto ModeloOPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParesPrimeraParHermanadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParesSegundaPorHermanadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorCalidadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto ColorCalzado {
            get {
                return this.ColorCalzadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorCalzadoField, value) != true)) {
                    this.ColorCalzadoField = value;
                    this.RaisePropertyChanged("ColorCalzado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto EstadoDeOP {
            get {
                return this.EstadoDeOPField;
            }
            set {
                if ((this.EstadoDeOPField.Equals(value) != true)) {
                    this.EstadoDeOPField = value;
                    this.RaisePropertyChanged("EstadoDeOP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto LineaTrabajo {
            get {
                return this.LineaTrabajoField;
            }
            set {
                if ((object.ReferenceEquals(this.LineaTrabajoField, value) != true)) {
                    this.LineaTrabajoField = value;
                    this.RaisePropertyChanged("LineaTrabajo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.HorarioDto[] ListaDeHorario {
            get {
                return this.ListaDeHorarioField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaDeHorarioField, value) != true)) {
                    this.ListaDeHorarioField = value;
                    this.RaisePropertyChanged("ListaDeHorario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto ModeloOP {
            get {
                return this.ModeloOPField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeloOPField, value) != true)) {
                    this.ModeloOPField = value;
                    this.RaisePropertyChanged("ModeloOP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((this.NumeroField.Equals(value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParesPrimeraParHermanado {
            get {
                return this.ParesPrimeraParHermanadoField;
            }
            set {
                if ((this.ParesPrimeraParHermanadoField.Equals(value) != true)) {
                    this.ParesPrimeraParHermanadoField = value;
                    this.RaisePropertyChanged("ParesPrimeraParHermanado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParesSegundaPorHermanado {
            get {
                return this.ParesSegundaPorHermanadoField;
            }
            set {
                if ((this.ParesSegundaPorHermanadoField.Equals(value) != true)) {
                    this.ParesSegundaPorHermanadoField = value;
                    this.RaisePropertyChanged("ParesSegundaPorHermanado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorCalidad {
            get {
                return this.SupervisorCalidadField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorCalidadField, value) != true)) {
                    this.SupervisorCalidadField = value;
                    this.RaisePropertyChanged("SupervisorCalidad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstadoOPDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    public enum EstadoOPDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Iniciado = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pausado = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Continuado = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finalizado = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HorarioDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class HorarioDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HoraFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HoraInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.HallazgoDto[] ListaDeHallazgosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TurnoDto TurnoHorarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HoraFin {
            get {
                return this.HoraFinField;
            }
            set {
                if ((this.HoraFinField.Equals(value) != true)) {
                    this.HoraFinField = value;
                    this.RaisePropertyChanged("HoraFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HoraInicio {
            get {
                return this.HoraInicioField;
            }
            set {
                if ((this.HoraInicioField.Equals(value) != true)) {
                    this.HoraInicioField = value;
                    this.RaisePropertyChanged("HoraInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.HallazgoDto[] ListaDeHallazgos {
            get {
                return this.ListaDeHallazgosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaDeHallazgosField, value) != true)) {
                    this.ListaDeHallazgosField = value;
                    this.RaisePropertyChanged("ListaDeHallazgos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TurnoDto TurnoHorario {
            get {
                return this.TurnoHorarioField;
            }
            set {
                if ((object.ReferenceEquals(this.TurnoHorarioField, value) != true)) {
                    this.TurnoHorarioField = value;
                    this.RaisePropertyChanged("TurnoHorario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TurnoDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TurnoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HoraFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HoraInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HoraFin {
            get {
                return this.HoraFinField;
            }
            set {
                if ((this.HoraFinField.Equals(value) != true)) {
                    this.HoraFinField = value;
                    this.RaisePropertyChanged("HoraFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HoraInicio {
            get {
                return this.HoraInicioField;
            }
            set {
                if ((this.HoraInicioField.Equals(value) != true)) {
                    this.HoraInicioField = value;
                    this.RaisePropertyChanged("HoraInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HallazgoDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class HallazgoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.DefectoDto DefectoHallazgoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HoraHallazgoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.PieDto PieHallazgoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorCalidadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.DefectoDto DefectoHallazgo {
            get {
                return this.DefectoHallazgoField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectoHallazgoField, value) != true)) {
                    this.DefectoHallazgoField = value;
                    this.RaisePropertyChanged("DefectoHallazgo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HoraHallazgo {
            get {
                return this.HoraHallazgoField;
            }
            set {
                if ((this.HoraHallazgoField.Equals(value) != true)) {
                    this.HoraHallazgoField = value;
                    this.RaisePropertyChanged("HoraHallazgo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.PieDto PieHallazgo {
            get {
                return this.PieHallazgoField;
            }
            set {
                if ((this.PieHallazgoField.Equals(value) != true)) {
                    this.PieHallazgoField = value;
                    this.RaisePropertyChanged("PieHallazgo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto SupervisorCalidad {
            get {
                return this.SupervisorCalidadField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorCalidadField, value) != true)) {
                    this.SupervisorCalidadField = value;
                    this.RaisePropertyChanged("SupervisorCalidad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectoDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DefectoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TipoDefectoDto TipoDeDefectoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((this.NumeroField.Equals(value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.TipoDefectoDto TipoDeDefecto {
            get {
                return this.TipoDeDefectoField;
            }
            set {
                if ((this.TipoDeDefectoField.Equals(value) != true)) {
                    this.TipoDeDefectoField = value;
                    this.RaisePropertyChanged("TipoDeDefecto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PieDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    public enum PieDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Izquierdo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Derecho = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoDefectoDto", Namespace="http://schemas.datacontract.org/2004/07/ControlCalidad.Servidor.Servicio.Entidade" +
        "s")]
    public enum TipoDefectoDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reproceso = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Observado = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ControlCalidadServiceReference.IControlCalidadServicio")]
    public interface IControlCalidadServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineas", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineasResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[] ObtenerLineas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineas", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineasResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[]> ObtenerLineasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineasSinEmpleado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineasSinEmpleadoResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[] ObtenerLineasSinEmpleado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineasSinEmpleado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineasSinEmpleadoResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[]> ObtenerLineasSinEmpleadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineaPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineaPorIdResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto ObtenerLineaPorId(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerLineaPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerLineaPorIdResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto> ObtenerLineaPorIdAsync(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerColores", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerColoresResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto[] ObtenerColores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerColores", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerColoresResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto[]> ObtenerColoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerColorPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerColorPorIdResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto ObtenerColorPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerColorPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerColorPorIdResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto> ObtenerColorPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/AgregarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/AgregarColorResponse")]
        bool AgregarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/AgregarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/AgregarColorResponse")]
        System.Threading.Tasks.Task<bool> AgregarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarColorResponse")]
        bool ModificarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarColorResponse")]
        System.Threading.Tasks.Task<bool> ModificarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/EliminarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/EliminarColorResponse")]
        bool EliminarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/EliminarColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/EliminarColorResponse")]
        System.Threading.Tasks.Task<bool> EliminarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdColorResponse")]
        int ObtenerUltimoIdColor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdColor", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdColorResponse")]
        System.Threading.Tasks.Task<int> ObtenerUltimoIdColorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerTodosLosModelos", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerTodosLosModelosResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto[] ObtenerTodosLosModelos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerTodosLosModelos", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerTodosLosModelosResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto[]> ObtenerTodosLosModelosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerModeloPorSku", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerModeloPorSkuResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto ObtenerModeloPorSku(int sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerModeloPorSku", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerModeloPorSkuResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto> ObtenerModeloPorSkuAsync(int sku);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoSku", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoSkuResponse")]
        int ObtenerUltimoSku();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoSku", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoSkuResponse")]
        System.Threading.Tasks.Task<int> ObtenerUltimoSkuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/GuardarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/GuardarModeloResponse")]
        bool GuardarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/GuardarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/GuardarModeloResponse")]
        System.Threading.Tasks.Task<bool> GuardarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarModeloResponse")]
        bool ModificarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarModeloResponse")]
        System.Threading.Tasks.Task<bool> ModificarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/EliminarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/EliminarModeloResponse")]
        bool EliminarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/EliminarModelo", ReplyAction="http://tempuri.org/IControlCalidadServicio/EliminarModeloResponse")]
        System.Threading.Tasks.Task<bool> EliminarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ComprobarLogueo", ReplyAction="http://tempuri.org/IControlCalidadServicio/ComprobarLogueoResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto ComprobarLogueo(string nombre, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ComprobarLogueo", ReplyAction="http://tempuri.org/IControlCalidadServicio/ComprobarLogueoResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto> ComprobarLogueoAsync(string nombre, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUsuarioPorIdResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto ObtenerUsuarioPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUsuarioPorIdResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto> ObtenerUsuarioPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerTodasLasOrdenProduccion", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerTodasLasOrdenProduccionResponse" +
            "")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto[] ObtenerTodasLasOrdenProduccion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerTodasLasOrdenProduccion", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerTodasLasOrdenProduccionResponse" +
            "")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto[]> ObtenerTodasLasOrdenProduccionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerOpPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerOpPorIdResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ObtenerOpPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerOpPorId", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerOpPorIdResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto> ObtenerOpPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/AgregarOrdenProduccion", ReplyAction="http://tempuri.org/IControlCalidadServicio/AgregarOrdenProduccionResponse")]
        bool AgregarOrdenProduccion(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/AgregarOrdenProduccion", ReplyAction="http://tempuri.org/IControlCalidadServicio/AgregarOrdenProduccionResponse")]
        System.Threading.Tasks.Task<bool> AgregarOrdenProduccionAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Estado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_EstadoRespons" +
            "e")]
        bool ModificarOrdenProduccion_Estado(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto nuevoEstadoOPDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Estado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_EstadoRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_EstadoAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto nuevoEstadoOPDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Trabajar", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_TrabajarRespo" +
            "nse")]
        bool ModificarOrdenProduccion_Trabajar(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Trabajar", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_TrabajarRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_TrabajarAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Abandonar", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_AbandonarResp" +
            "onse")]
        bool ModificarOrdenProduccion_Abandonar(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_Abandonar", ReplyAction="http://tempuri.org/IControlCalidadServicio/ModificarOrdenProduccion_AbandonarResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_AbandonarAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdOP", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdOPResponse")]
        int ObtenerUltimoIdOP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdOP", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerUltimoIdOPResponse")]
        System.Threading.Tasks.Task<int> ObtenerUltimoIdOPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerOpAsignadoAUnEmpleado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerOpAsignadoAUnEmpleadoResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ObtenerOpAsignadoAUnEmpleado(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerOpAsignadoAUnEmpleado", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerOpAsignadoAUnEmpleadoResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto> ObtenerOpAsignadoAUnEmpleadoAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerNuevosEstadosOp", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerNuevosEstadosOpResponse")]
        ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto[] ObtenerNuevosEstadosOp(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto estadoOp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlCalidadServicio/ObtenerNuevosEstadosOp", ReplyAction="http://tempuri.org/IControlCalidadServicio/ObtenerNuevosEstadosOpResponse")]
        System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto[]> ObtenerNuevosEstadosOpAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto estadoOp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControlCalidadServicioChannel : ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.IControlCalidadServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControlCalidadServicioClient : System.ServiceModel.ClientBase<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.IControlCalidadServicio>, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.IControlCalidadServicio {
        
        public ControlCalidadServicioClient() {
        }
        
        public ControlCalidadServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControlCalidadServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlCalidadServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlCalidadServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[] ObtenerLineas() {
            return base.Channel.ObtenerLineas();
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[]> ObtenerLineasAsync() {
            return base.Channel.ObtenerLineasAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[] ObtenerLineasSinEmpleado() {
            return base.Channel.ObtenerLineasSinEmpleado();
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto[]> ObtenerLineasSinEmpleadoAsync() {
            return base.Channel.ObtenerLineasSinEmpleadoAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto ObtenerLineaPorId(int numero) {
            return base.Channel.ObtenerLineaPorId(numero);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.LineaDto> ObtenerLineaPorIdAsync(int numero) {
            return base.Channel.ObtenerLineaPorIdAsync(numero);
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto[] ObtenerColores() {
            return base.Channel.ObtenerColores();
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto[]> ObtenerColoresAsync() {
            return base.Channel.ObtenerColoresAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto ObtenerColorPorId(int id) {
            return base.Channel.ObtenerColorPorId(id);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto> ObtenerColorPorIdAsync(int id) {
            return base.Channel.ObtenerColorPorIdAsync(id);
        }
        
        public bool AgregarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.AgregarColor(color);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.AgregarColorAsync(color);
        }
        
        public bool ModificarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.ModificarColor(color);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.ModificarColorAsync(color);
        }
        
        public bool EliminarColor(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.EliminarColor(color);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarColorAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ColorDto color) {
            return base.Channel.EliminarColorAsync(color);
        }
        
        public int ObtenerUltimoIdColor() {
            return base.Channel.ObtenerUltimoIdColor();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerUltimoIdColorAsync() {
            return base.Channel.ObtenerUltimoIdColorAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto[] ObtenerTodosLosModelos() {
            return base.Channel.ObtenerTodosLosModelos();
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto[]> ObtenerTodosLosModelosAsync() {
            return base.Channel.ObtenerTodosLosModelosAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto ObtenerModeloPorSku(int sku) {
            return base.Channel.ObtenerModeloPorSku(sku);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto> ObtenerModeloPorSkuAsync(int sku) {
            return base.Channel.ObtenerModeloPorSkuAsync(sku);
        }
        
        public int ObtenerUltimoSku() {
            return base.Channel.ObtenerUltimoSku();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerUltimoSkuAsync() {
            return base.Channel.ObtenerUltimoSkuAsync();
        }
        
        public bool GuardarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.GuardarModelo(modelo);
        }
        
        public System.Threading.Tasks.Task<bool> GuardarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.GuardarModeloAsync(modelo);
        }
        
        public bool ModificarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.ModificarModelo(modelo);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.ModificarModeloAsync(modelo);
        }
        
        public bool EliminarModelo(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.EliminarModelo(modelo);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarModeloAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.ModeloDto modelo) {
            return base.Channel.EliminarModeloAsync(modelo);
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto ComprobarLogueo(string nombre, string contraseña) {
            return base.Channel.ComprobarLogueo(nombre, contraseña);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto> ComprobarLogueoAsync(string nombre, string contraseña) {
            return base.Channel.ComprobarLogueoAsync(nombre, contraseña);
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto ObtenerUsuarioPorId(int id) {
            return base.Channel.ObtenerUsuarioPorId(id);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.UsuarioDto> ObtenerUsuarioPorIdAsync(int id) {
            return base.Channel.ObtenerUsuarioPorIdAsync(id);
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto[] ObtenerTodasLasOrdenProduccion() {
            return base.Channel.ObtenerTodasLasOrdenProduccion();
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto[]> ObtenerTodasLasOrdenProduccionAsync() {
            return base.Channel.ObtenerTodasLasOrdenProduccionAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ObtenerOpPorId(int id) {
            return base.Channel.ObtenerOpPorId(id);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto> ObtenerOpPorIdAsync(int id) {
            return base.Channel.ObtenerOpPorIdAsync(id);
        }
        
        public bool AgregarOrdenProduccion(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleado) {
            return base.Channel.AgregarOrdenProduccion(ordenProduccion, empleado);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarOrdenProduccionAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleado) {
            return base.Channel.AgregarOrdenProduccionAsync(ordenProduccion, empleado);
        }
        
        public bool ModificarOrdenProduccion_Estado(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto nuevoEstadoOPDto) {
            return base.Channel.ModificarOrdenProduccion_Estado(ordenProduccion, nuevoEstadoOPDto);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_EstadoAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto nuevoEstadoOPDto) {
            return base.Channel.ModificarOrdenProduccion_EstadoAsync(ordenProduccion, nuevoEstadoOPDto);
        }
        
        public bool ModificarOrdenProduccion_Trabajar(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto) {
            return base.Channel.ModificarOrdenProduccion_Trabajar(ordenProduccion, empleadoDto);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_TrabajarAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion, ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto) {
            return base.Channel.ModificarOrdenProduccion_TrabajarAsync(ordenProduccion, empleadoDto);
        }
        
        public bool ModificarOrdenProduccion_Abandonar(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion) {
            return base.Channel.ModificarOrdenProduccion_Abandonar(ordenProduccion);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarOrdenProduccion_AbandonarAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ordenProduccion) {
            return base.Channel.ModificarOrdenProduccion_AbandonarAsync(ordenProduccion);
        }
        
        public int ObtenerUltimoIdOP() {
            return base.Channel.ObtenerUltimoIdOP();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerUltimoIdOPAsync() {
            return base.Channel.ObtenerUltimoIdOPAsync();
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto ObtenerOpAsignadoAUnEmpleado(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto) {
            return base.Channel.ObtenerOpAsignadoAUnEmpleado(empleadoDto);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.OrdenProduccionDto> ObtenerOpAsignadoAUnEmpleadoAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EmpleadoDto empleadoDto) {
            return base.Channel.ObtenerOpAsignadoAUnEmpleadoAsync(empleadoDto);
        }
        
        public ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto[] ObtenerNuevosEstadosOp(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto estadoOp) {
            return base.Channel.ObtenerNuevosEstadosOp(estadoOp);
        }
        
        public System.Threading.Tasks.Task<ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto[]> ObtenerNuevosEstadosOpAsync(ControlCalidad.Cliente.AccesoExterno.ControlCalidadServiceReference.EstadoOPDto estadoOp) {
            return base.Channel.ObtenerNuevosEstadosOpAsync(estadoOp);
        }
    }
}
